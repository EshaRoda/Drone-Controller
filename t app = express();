[1mdiff --git a/blutooth.js b/blutooth.js[m
[1mindex 026d377..1d16b0a 100644[m
[1m--- a/blutooth.js[m
[1m+++ b/blutooth.js[m
[36m@@ -1,6 +1,6 @@[m
[31m-var arDrone = require('ar-drone');[m
[31m-var client  = arDrone.createClient();[m
[31m-client.createRepl();[m
[32m+[m[32m// var arDrone = require('ar-drone');[m
[32m+[m[32m// var client  = arDrone.createClient();[m
[32m+[m[32m// client.createRepl();[m
 [m
 // 'use strict';[m
 [m
[1mdiff --git a/dist/bundle.js b/dist/bundle.js[m
[1mindex 9a5ec78..f5097f3 100644[m
[1m--- a/dist/bundle.js[m
[1m+++ b/dist/bundle.js[m
[36m@@ -887,7 +887,7 @@[m [meval("\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0[m
 /***/ (function(module, exports, __webpack_require__) {[m
 [m
 "use strict";[m
[31m-eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(27);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MessageList = __webpack_require__(120);\n\nvar _MessageList2 = _interopRequireDefault(_MessageList);\n\nvar _ChatBar = __webpack_require__(119);\n\nvar _ChatBar2 = _interopRequireDefault(_ChatBar);\n\nvar _NavBar = __webpack_require__(122);\n\nvar _NavBar2 = _interopRequireDefault(_NavBar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar uuid = __webpack_require__(241);\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\n    _this.state = {\n      currentUser: { name: \"Bob\" }, // optional. if currentUser is not defined, it means the user is Anonymous\n      messages: [],\n      count: 0\n    };\n    _this.updateme = _this.updateme.bind(_this);\n    _this.updatename = _this.updatename.bind(_this);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: 'updateme',\n    value: function updateme(text, id, username) {\n      var new_obj = [{ username: username, content: text, id: uuid(), type: \"postNotification\", count: 0 }];\n      this.ws.send(JSON.stringify(new_obj[0]));\n\n      // Update the state of the app component.\n      // Calling setState will trigger a call to render() in App and all child components.\n    }\n  }, {\n    key: 'updatename',\n    value: function updatename(newname, oldname) {\n      if (!(newname === oldname)) {\n        var obj = { newname: newname, mytype: \"name\", oldname: oldname, type: \"name\" };\n        this.ws.send(JSON.stringify(obj));\n        this.setState({\n          currentUser: {\n            name: name\n          }\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var HOST = location.origin.replace(/^http/, 'ws'); // for deploying on heroku\n      this.ws = new WebSocket(HOST);\n      var sldkfjdslkfj = \"sdfkjsdlfkj\";\n      // this.ws = new WebSocket('ws://localhost:3001');\n      this.ws.addEventListener('open', function () {});\n      this.ws.addEventListener('message', function (event) {\n        var temp = event.data;\n\n        var data = JSON.parse(event.data);\n\n        var mymass = {};\n        if (data.type === \"name\") {\n          var news = [{ username: \"\", content: data.oldname + \" changed their name to \" + data.newname, id: uuid(), count: 0 }];\n          mymass = _this2.state.messages.concat(news);\n          _this2.setState({ messages: mymass });\n        } else if (data.type === \"postNotification\") {\n          mymass = _this2.state.messages.concat([data]);\n          _this2.setState({ messages: mymass });\n        } else if (data.type === \"count\") {\n          _this2.setState({ count: data.count });\n        }\n\n        // const newMessages = this.state.messages;\n        // const messageObject = JSON.parse(event.data);\n        // newMessages.push(messageObject);\n        // this.setState({messages: newMessages});\n      });\n      // this.ws.onmessage= e => {\n\n      //   console.log(message)};/*this.setState({ users: Object.values(JSON.parse(e.data)) })*/\n      this.ws.onerror = function (e) {\n        return _this2.setState({ error: 'WebSocket error' });\n      };\n      this.ws.onclose = function (e) {\n        return !e.wasClean && _this2.setState({ error: 'WebSocket error: ' + e.code + ' ' + e.reason });\n      };\n\n      console.log(\"componentDidMount <App />\");\n      setTimeout(function () {\n        console.log(\"Simulating incoming message\");\n        // Add a new message to the list of messages in the data store\n\n        // Update the state of the app component.\n        // Calling setState will trigger a call to render() in App and all child components.\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.ws.close();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_NavBar2.default, { count: this.state.count }),\n        _react2.default.createElement(_MessageList2.default, { Messages: this.state.messages }),\n        _react2.default.createElement(_ChatBar2.default, { currentUser: this.state.currentUser, updatename: this.updatename, updateme: this.updateme })\n      );\n    }\n  }]);\n\n  return App;\n}(_react.Component);\n\nexports.default = App;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.jsx\n// module id = 118\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/App.jsx?");[m
[32m+[m[32meval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(27);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MessageList = __webpack_require__(120);\n\nvar _MessageList2 = _interopRequireDefault(_MessageList);\n\nvar _ChatBar = __webpack_require__(119);\n\nvar _ChatBar2 = _interopRequireDefault(_ChatBar);\n\nvar _NavBar = __webpack_require__(122);\n\nvar _NavBar2 = _interopRequireDefault(_NavBar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar uuid = __webpack_require__(241);\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\n    _this.state = {\n      currentUser: { name: \"Bob\" }, // optional. if currentUser is not defined, it means the user is Anonymous\n      messages: [],\n      count: 0\n    };\n    _this.updateme = _this.updateme.bind(_this);\n    _this.updatename = _this.updatename.bind(_this);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: 'updateme',\n    value: function updateme(text, id, username) {\n      var new_obj = [{ username: username, content: text, id: uuid(), type: \"postNotification\", count: 0 }];\n      this.ws.send(JSON.stringify(new_obj[0]));\n\n      // Update the state of the app component.\n      // Calling setState will trigger a call to render() in App and all child components.\n    }\n  }, {\n    key: 'updatename',\n    value: function updatename(newname, oldname) {\n      if (!(newname === oldname)) {\n        var obj = { newname: newname, mytype: \"name\", oldname: oldname, type: \"name\" };\n        this.ws.send(JSON.stringify(obj));\n        this.setState({\n          currentUser: {\n            name: name\n          }\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var HOST = location.origin.replace(/^http/, 'ws'); // for deploying on heroku\n      // this.ws = new WebSocket(HOST);\n      this.ws = new WebSocket('ws://localhost:3001');\n      this.ws.addEventListener('open', function () {});\n      this.ws.addEventListener('message', function (event) {\n        var temp = event.data;\n\n        var data = JSON.parse(event.data);\n\n        var mymass = {};\n        if (data.type === \"name\") {\n          var news = [{ username: \"\", content: data.oldname + \" changed their name to \" + data.newname, id: uuid(), count: 0 }];\n          mymass = _this2.state.messages.concat(news);\n          _this2.setState({ messages: mymass });\n        } else if (data.type === \"postNotification\") {\n          mymass = _this2.state.messages.concat([data]);\n          _this2.setState({ messages: mymass });\n        } else if (data.type === \"count\") {\n          _this2.setState({ count: data.count });\n        }\n\n        // const newMessages = this.state.messages;\n        // const messageObject = JSON.parse(event.data);\n        // newMessages.push(messageObject);\n        // this.setState({messages: newMessages});\n      });\n      // this.ws.onmessage= e => {\n\n      //   console.log(message)};/*this.setState({ users: Object.values(JSON.parse(e.data)) })*/\n      this.ws.onerror = function (e) {\n        return _this2.setState({ error: 'WebSocket error' });\n      };\n      this.ws.onclose = function (e) {\n        return !e.wasClean && _this2.setState({ error: 'WebSocket error: ' + e.code + ' ' + e.reason });\n      };\n\n      console.log(\"componentDidMount <App />\");\n      setTimeout(function () {\n        console.log(\"Simulating incoming message\");\n        // Add a new message to the list of messages in the data store\n\n        // Update the state of the app component.\n        // Calling setState will trigger a call to render() in App and all child components.\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.ws.close();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_NavBar2.default, { count: this.state.count }),\n        _react2.default.createElement(_MessageList2.default, { Messages: this.state.messages }),\n        _react2.default.createElement(_ChatBar2.default, { currentUser: this.state.currentUser, updatename: this.updatename, updateme: this.updateme })\n      );\n    }\n  }]);\n\n  return App;\n}(_react.Component);\n\nexports.default = App;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.jsx\n// module id = 118\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/App.jsx?");[m
 [m
 /***/ }),[m
 /* 119 */[m
[1mdiff --git a/production-server.js b/production-server.js[m
[1mindex 6f47b25..d31f034 100644[m
[1m--- a/production-server.js[m
[1m+++ b/production-server.js[m
[36m@@ -5,7 +5,7 @@[m [mconst app = express();[m
 const indexPath = path.join(__dirname, './index.html');[m
 const publicPath = path.join(__dirname, './dist');[m
 [m
[31m-app.set('port', process.env.PORT || 8080);[m
[32m+[m[32mapp.set('port', process.env.PORT || 3000);[m
 app.use('/dist', express.static(publicPath));[m
 app.get('/', (req, res) => res.sendFile(indexPath));[m
 [m
[1mdiff --git a/socketServer/server.js b/socketServer/server.js[m
[1mindex 1808c10..a205108 100644[m
[1m--- a/socketServer/server.js[m
[1m+++ b/socketServer/server.js[m
[36m@@ -1,5 +1,5 @@[m
 // server.js[m
[31m-var blue = require('../blutooth.js')[m
[32m+[m[32m// var blue = require('../blutooth.js')[m
 const express = require('express');[m
 const wsLib = require('ws');[m
 const SocketServer = wsLib.Server;[m
[1mdiff --git a/src/App.jsx b/src/App.jsx[m
[1mindex 58bdce5..607cfb5 100644[m
[1m--- a/src/App.jsx[m
[1m+++ b/src/App.jsx[m
[36m@@ -48,9 +48,8 @@[m [mclass App extends Component {[m
   componentDidMount() {[m
 [m
     var HOST = location.origin.replace(/^http/, 'ws')// for deploying on heroku[m
[31m-    this.ws = new WebSocket(HOST);[m
[31m-    var sldkfjdslkfj = "sdfkjsdlfkj";[m
[31m-    // this.ws = new WebSocket('ws://localhost:3001');[m
[32m+[m[32m    // this.ws = new WebSocket(HOST);[m
[32m+[m[32m    this.ws = new WebSocket('ws://localhost:3001');[m
     this.ws.addEventListener('open', () => {[m
 [m
     });[m
